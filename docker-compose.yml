version: '3'

networks:
  backend:
    driver: ${NETWORKS_DRIVER}

volumes:
    mongo:
        driver: ${VOLUMES_DRIVER}
    docker-in-docker:
        driver: ${VOLUMES_DRIVER}
services:

    cleaning:
        build:
            context: ./cleaning
            args:
                - NODE_VERSION=${NODE_VERSION}
                - PROJECT_PATH=/opt/app/
                - NODE_ENV=production
                - YARN=false
        volumes:
            - ./cleaning:/opt/app
        networks:
            - backend
        entrypoint: run-app "npm start"
        tty: true
        depends_on:
            - mongo
    
    discounts:
        build:
            context: ./discounts
            args:
                - NODE_VERSION=${NODE_VERSION}
                - PROJECT_PATH=/opt/app/
                - NODE_ENV=production
                - YARN=false
        volumes:
            - ./discounts:/opt/app
        networks:
            - backend
        entrypoint: run-app "npm start"
        tty: true
        depends_on:
            - mongo
    
    mongo:
        build: ./mongo
        ports:
          - "${MONGODB_PORT}:27017"
        volumes:
          - ${DATA_PATH_HOST}/mongo:/data/db
          - ${DATA_PATH_HOST}/mongo_config:/data/configdb
        networks:
          - backend
    
    nginx:
        build:
            context: ./nginx
            args:
                - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
                - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
                - http_proxy
                - https_proxy
                - no_proxy
        volumes:
            - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
            - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
            - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
            - ${NGINX_SSL_PATH}:/etc/nginx/ssl
        ports:
            - "${NGINX_HOST_HTTP_PORT}:80"
            - "${NGINX_HOST_HTTPS_PORT}:443"
        depends_on:
            - cleaning
            - discounts
            - php-fpm
        networks:
            - backend
    
    php-fpm:
        build:
            context: ./php-fpm
            args:
            - PHP_VERSION=${PHP_VERSION}
            - INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH}
            - INSTALL_MYSQLI=${PHP_FPM_INSTALL_MYSQLI}
            - INSTALL_INTL=${PHP_FPM_INSTALL_INTL}
            - INSTALL_IMAGEMAGICK=${PHP_FPM_INSTALL_IMAGEMAGICK}
            - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
            - INSTALL_IMAGE_OPTIMIZERS=${PHP_FPM_INSTALL_IMAGE_OPTIMIZERS}
            - INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}
            - INSTALL_MONGO=${PHP_FPM_INSTALL_MONGO}
            - INSTALL_XSL=${PHP_FPM_INSTALL_XSL}
            - INSTALL_EXIF=${PHP_FPM_INSTALL_EXIF}
            - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
            - INSTALL_SOAP=${PHP_FPM_INSTALL_SOAP}
            - INSTALL_MEMCACHED=${PHP_FPM_INSTALL_MEMCACHED}
            - ADDITIONAL_LOCALES=${PHP_FPM_ADDITIONAL_LOCALES}
            - PUID=${PHP_FPM_PUID}
            - PGID=${PHP_FPM_PGID}
            - LOCALE=${PHP_FPM_DEFAULT_LOCALE}
            - http_proxy
            - https_proxy
            - no_proxy
        volumes:
            - ./php-fpm/php${PHP_VERSION}.ini:/usr/local/etc/php/php.ini
            - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
        expose:
            - "9000"
        extra_hosts:
            - "dockerhost:${DOCKER_HOST_IP}"
        environment:
            - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
            - DOCKER_HOST=tcp://docker-in-docker:2376
            - DOCKER_TLS_VERIFY=1
            - DOCKER_TLS_CERTDIR=/certs
        depends_on:
            - workspace
        networks:
            - backend
        links:
            - docker-in-docker
    
    workspace:
        build:
            context: ./workspace
            args:
            - PHP_VERSION=${PHP_VERSION}
            - NODE_VERSION=${NODE_VERSION}
            - INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH}
            - INSTALL_MYSQLI=${PHP_FPM_INSTALL_MYSQLI}
            - INSTALL_INTL=${PHP_FPM_INSTALL_INTL}
            - INSTALL_IMAGEMAGICK=${PHP_FPM_INSTALL_IMAGEMAGICK}
            - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
            - INSTALL_IMAGE_OPTIMIZERS=${PHP_FPM_INSTALL_IMAGE_OPTIMIZERS}
            - INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}
            - INSTALL_MONGO=${PHP_FPM_INSTALL_MONGO}
            - INSTALL_XSL=${PHP_FPM_INSTALL_XSL}
            - INSTALL_EXIF=${PHP_FPM_INSTALL_EXIF}
            - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
            - INSTALL_SOAP=${PHP_FPM_INSTALL_SOAP}
            - INSTALL_MEMCACHED=${PHP_FPM_INSTALL_MEMCACHED}
            - COMPOSER_GLOBAL_INSTALL=${WORKSPACE_COMPOSER_GLOBAL_INSTALL}
            - COMPOSER_AUTH=${WORKSPACE_COMPOSER_AUTH}
            - COMPOSER_REPO_PACKAGIST=${WORKSPACE_COMPOSER_REPO_PACKAGIST}
            - NVM_NODEJS_ORG_MIRROR=${WORKSPACE_NVM_NODEJS_ORG_MIRROR}
            - INSTALL_NODE=${WORKSPACE_INSTALL_NODE}
            - NODE_VERSION=${WORKSPACE_NODE_VERSION}
            - NPM_REGISTRY=${WORKSPACE_NPM_REGISTRY}
            - INSTALL_YARN=${WORKSPACE_INSTALL_YARN}
            - PUID=${PHP_FPM_PUID}
            - PGID=${PHP_FPM_PGID}
            - TZ=${WORKSPACE_TIMEZONE}
            - http_proxy
            - https_proxy
            - no_proxy
        volumes:
            - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
            - docker-in-docker:/certs/client
            - ./php-worker/supervisord.d:/etc/supervisord.d
        extra_hosts:
            - "dockerhost:${DOCKER_HOST_IP}"
        ports:
            - "${WORKSPACE_SSH_PORT}:22"
        tty: true
        environment:
            - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
            - DOCKER_HOST=tcp://docker-in-docker:2376
            - DOCKER_TLS_VERIFY=1
            - DOCKER_TLS_CERTDIR=/certs
            - DOCKER_CERT_PATH=/certs/client
        networks:
            - backend
        links:
            - docker-in-docker

    docker-in-docker:
        image: docker:19.03-dind
        environment:
            DOCKER_TLS_SAN: DNS:docker-in-docker      
        privileged: true
        volumes:
            - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
            - docker-in-docker:/certs/client
        expose:
            - 2375
        networks:
            - backend